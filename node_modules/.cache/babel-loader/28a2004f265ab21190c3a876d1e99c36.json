{"ast":null,"code":"var _jsxFileName = \"E:\\\\work-station\\\\2020.2.27.rechart-project\\\\Git-rechart-popup-form\\\\src\\\\App.js\";\nimport React, { PureComponent } from \"react\";\nimport $ from \"jquery\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\"; // rechart initial data\n\nconst data = [{\n  date: \"02-25\",\n  one: 4000,\n  two: 2400\n}, {\n  date: \"02-26\",\n  one: 3000,\n  two: 1398\n}, {\n  date: \"02-27\",\n  one: 2000,\n  two: 9800\n}, {\n  date: \"02-28\",\n  one: 2780,\n  two: 3908\n}, {\n  date: \"03-01\",\n  one: 1890,\n  two: 4800\n}, {\n  date: \"03-02\",\n  one: 2390,\n  two: 3800\n}, {\n  date: \"03-03\",\n  one: 3490,\n  two: 4300\n}]; // initial rechart data\n\nconst date_data = [{\n  date: \"02-25\",\n  message_id: 1,\n  person: \"Andrew\",\n  message: \"hi, Ivan. what are you doing now? I am going to your home.\"\n}, {\n  date: \"02-26\",\n  message_id: 2,\n  person: \"Ivan\",\n  message: \"Hi, I am a senior web developer. I am finding remote job here. who can help me?\"\n}, {\n  date: \"03-02\",\n  message_id: 3,\n  person: \"Alex\",\n  message: \"Hi, Here is Alex. I am friend of Ouatab. I am a soldier of morocco airline.\"\n}]; // message-icon\n\nconst path = 'm74.414 480.548h-36.214l25.607-25.607c13.807-13.807 22.429-31.765 24.747-51.246-59.127-38.802-88.554-95.014-88.554-153.944 0-108.719 99.923-219.203 256.414-219.203 165.785 0 254.682 101.666 254.682 209.678 0 108.724-89.836 210.322-254.682 210.322-28.877 0-59.01-3.855-85.913-10.928-25.467 26.121-59.973 40.928-96.087 40.928z'; //main component\n\nclass App extends PureComponent {\n  // constructor\n  constructor(props) {\n    super(props);\n\n    this.renderCustomAxisTick = ({\n      x,\n      y,\n      payload\n    }) => {\n      let including_message = false;\n      var message_id = 0;\n      var message = {};\n      date_data.forEach(element => {\n        if (element.date === payload.value) {\n          including_message = true;\n          message_id = element.message_id;\n          message = element;\n        }\n      });\n\n      if (including_message) {\n        let className = 'message-active_' + message_id;\n        return React.createElement(React.Fragment, null, React.createElement(\"svg\", {\n          x: x - 12,\n          y: y + 0,\n          width: 24,\n          height: 24,\n          viewBox: \"0 0 512 512\",\n          fill: \"#666\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"path\", {\n          className: className,\n          d: path,\n          onClick: () => this.handleClick(message, x, y),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        })), React.createElement(\"foreignObject\", {\n          x: x - 20,\n          y: y + 25,\n          width: 124,\n          height: 24,\n          fill: \"#666\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"message-inactive\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, payload.value)));\n      } else {\n        return React.createElement(\"text\", {\n          x: x - 20,\n          y: y + 4,\n          width: 124,\n          height: 24,\n          fill: \"#666\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"tspan\", {\n          className: \"message-inactive\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, payload.value));\n      }\n    };\n\n    this.handleClick = (message, x, y) => {\n      this.setState({\n        message_data: message,\n        mouseX: x,\n        mouseY: y,\n        visibleMessageNote: \"_active\"\n      });\n    };\n\n    this.state = {\n      xAxis_value: \"\",\n      message_data: {},\n      mouseX: 0,\n      mouseY: 0,\n      visibleMessageNote: \"_false\"\n    };\n  } // message icon. icon has been shown when date has message data. when click icon, it shows message data of that date\n\n\n  // when click rechart, getting pointer data of rechart\n  showTooltipData(data) {\n    if (!data) {\n      return false;\n    }\n\n    this.setState({\n      xAxis_value: data.activeLabel\n    }); // open and close popup modal\n\n    $(\".overlay\").addClass(\"is-open\");\n    $(\".close-btn\").click(function () {\n      $(\".overlay\").removeClass(\"is-open\");\n    });\n  } //if click mouse on screen, then disable showing of message note\n\n\n  handleVisible() {\n    if (this.state.visibleMessageNote === \"_active\") {\n      this.setState({\n        visibleMessageNote: \"_false\"\n      });\n    }\n  } // rendering rechart and popup modal\n\n\n  render() {\n    return React.createElement(\"div\", {\n      onClick: this.handleVisible.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      width: 800,\n      height: 500,\n      data: data,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      onClick: this.showTooltipData.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"date\",\n      tick: this.renderCustomAxisTick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      visible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"one\",\n      stroke: \"#8884d8\",\n      activeDot: {\n        r: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"two\",\n      stroke: \"#82ca9d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(MessageNote, {\n      mouseX: this.state.mouseX,\n      mouseY: this.state.mouseY,\n      message: this.state.message_data,\n      state: this.state.visibleMessageNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(PopupModal, {\n      date: this.state.xAxis_value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }));\n  }\n\n} // popup modal component. if you want to change modal, you can change this template.\n\n\nfunction PopupModal(props) {\n  return React.createElement(\"div\", {\n    className: \"overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"close-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"close black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"text-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"capture-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, props.date)), React.createElement(\"form\", {\n    id: \"popup-form\",\n    className: \"capture-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    name: \"date\",\n    className: \"date\",\n    defaultValue: props.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    className: \"textarea\",\n    row: \"10\",\n    name: \"message\",\n    placeholder: \"Start typing here\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"send-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"POST\"))));\n} // message note custom component\n\n\nfunction MessageNote(props) {\n  let className = \"message_note\" + props.state; // state has 2 values: _active, _false.\n\n  return React.createElement(\"div\", {\n    className: className,\n    style: {\n      marginLeft: props.mouseX + 'px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"message_title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"User Message\"), React.createElement(\"div\", {\n    className: \"message_sender\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, props.message.date), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, props.message.person)), React.createElement(\"div\", {\n    className: \"message_content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, props.message.message));\n}\n\nexport default App;","map":{"version":3,"sources":["E:/work-station/2020.2.27.rechart-project/Git-rechart-popup-form/src/App.js"],"names":["React","PureComponent","$","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","data","date","one","two","date_data","message_id","person","message","path","App","constructor","props","renderCustomAxisTick","x","y","payload","including_message","forEach","element","value","className","handleClick","setState","message_data","mouseX","mouseY","visibleMessageNote","state","xAxis_value","showTooltipData","activeLabel","addClass","click","removeClass","handleVisible","render","bind","top","right","left","bottom","r","PopupModal","MessageNote","marginLeft"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport $ from \"jquery\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\n// rechart initial data\nconst data = [\n  { date: \"02-25\", one: 4000, two: 2400 },\n  { date: \"02-26\", one: 3000, two: 1398 },\n  { date: \"02-27\", one: 2000, two: 9800 },\n  { date: \"02-28\", one: 2780, two: 3908 },\n  { date: \"03-01\", one: 1890, two: 4800 },\n  { date: \"03-02\", one: 2390, two: 3800 },\n  { date: \"03-03\", one: 3490, two: 4300 }\n];\n\n// initial rechart data\nconst date_data = [\n  { date: \"02-25\", message_id: 1, person: \"Andrew\", message: \"hi, Ivan. what are you doing now? I am going to your home.\" },\n  { date: \"02-26\", message_id: 2, person: \"Ivan\", message: \"Hi, I am a senior web developer. I am finding remote job here. who can help me?\" },\n  { date: \"03-02\", message_id: 3, person: \"Alex\", message: \"Hi, Here is Alex. I am friend of Ouatab. I am a soldier of morocco airline.\" }\n]\n\n// message-icon\nconst path = 'm74.414 480.548h-36.214l25.607-25.607c13.807-13.807 22.429-31.765 24.747-51.246-59.127-38.802-88.554-95.014-88.554-153.944 0-108.719 99.923-219.203 256.414-219.203 165.785 0 254.682 101.666 254.682 209.678 0 108.724-89.836 210.322-254.682 210.322-28.877 0-59.01-3.855-85.913-10.928-25.467 26.121-59.973 40.928-96.087 40.928z';\n  \n//main component\nclass App extends PureComponent {\n  // constructor\n  constructor(props) {\n    super(props);\n    this.state = { xAxis_value: \"\", message_data:{}, mouseX:0, mouseY:0, visibleMessageNote:\"_false\" };\n  }\n\n  // message icon. icon has been shown when date has message data. when click icon, it shows message data of that date\n  renderCustomAxisTick = ({ x, y, payload }) => {\n    let including_message = false;\n    var message_id = 0;\n    var message = {}\n\n    date_data.forEach(element => {\n      if(element.date === payload.value){\n        including_message = true;\n        message_id = element.message_id;\n        message = element;\n      }\n    });\n    if(including_message){\n      let className = 'message-active_' + message_id;\n      return (\n        <>\n          <svg x={x - 12} y={y + 0} width={24} height={24} viewBox=\"0 0 512 512\" fill=\"#666\">\n            <path className={className} d={path} onClick={() => this.handleClick(message, x, y)}/>\n          </svg>\n          <foreignObject x={x -20} y={y+25} width={124} height={24} fill=\"#666\">\n            <div className=\"message-inactive\">\n              {payload.value}\n            </div>\n          </foreignObject>\n        </>\n      );\n    }else{\n      return (\n        <text x={x -20} y={y+4} width={124} height={24} fill=\"#666\">\n          <tspan className=\"message-inactive\">\n            {payload.value}\n          </tspan>\n        </text>\n      )\n    }\n  };\n\n  handleClick = (message, x, y) => {\n    this.setState({\n      message_data:message, mouseX: x,  mouseY: y, visibleMessageNote: \"_active\"\n    });\n  }\n\n  // when click rechart, getting pointer data of rechart\n  showTooltipData(data) {\n    if(!data){\n      return false;\n    }\n    this.setState({\n      xAxis_value: data.activeLabel      \n    });\n    // open and close popup modal\n    $(\".overlay\").addClass(\"is-open\");\n    $(\".close-btn\").click(function() {\n      $(\".overlay\").removeClass(\"is-open\");\n    });\n  }\n\n  //if click mouse on screen, then disable showing of message note\n  handleVisible(){\n    if(this.state.visibleMessageNote === \"_active\"){\n      this.setState({visibleMessageNote:\"_false\"});\n    }\n  }\n\n  // rendering rechart and popup modal\n  render() {\n    return (\n      <div onClick={this.handleVisible.bind(this)  }>\n        <LineChart\n          width={800}\n          height={500}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          }}\n          onClick={this.showTooltipData.bind(this)}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"date\" tick ={this.renderCustomAxisTick.bind(this)}/>\n          <YAxis />\n          <Tooltip />\n          <Legend visible={true}/>\n          <Line\n            type=\"monotone\"\n            dataKey=\"one\"\n            stroke=\"#8884d8\"\n            activeDot={{ r: 8 }}\n          />\n          <Line type=\"monotone\" dataKey=\"two\" stroke=\"#82ca9d\" />\n        </LineChart>\n        <MessageNote mouseX = {this.state.mouseX} mouseY = {this.state.mouseY} message = {this.state.message_data} state = {this.state.visibleMessageNote}/>\n        <PopupModal date={this.state.xAxis_value} />\n      </div>\n    );\n  }\n}\n\n// popup modal component. if you want to change modal, you can change this template.\nfunction PopupModal(props) {\n  return (\n    <div className=\"overlay\">\n      <div className=\"modal\">\n        <div className=\"close-btn\">\n          <span className=\"close black\"></span>\n        </div>\n        <div className=\"text-box\">\n          <p className=\"capture-date\">\n           {props.date}\n          </p>\n        </div>\n        <form id=\"popup-form\" className=\"capture-form\">\n          <textarea name='date' className=\"date\" defaultValue ={props.date}></textarea>\n          <textarea\n            className=\"textarea\"\n            row=\"10\"\n            name=\"message\"\n            placeholder=\"Start typing here\"\n            required\n          ></textarea>\n          <button type=\"submit\" className=\"send-message\">\n            POST\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\n// message note custom component\nfunction MessageNote(props){\n  let className = \"message_note\" + props.state; // state has 2 values: _active, _false.\n  return(\n      <div className={className} style={{marginLeft: props.mouseX + 'px'}} > \n      <div className=\"message_title\">\n        User Message\n      </div>\n      <div className=\"message_sender\">\n        <div>\n          {props.message.date}\n        </div>\n        <div>\n          {props.message.person}\n        </div>\n      </div>\n      <div className=\"message_content\">\n        {props.message.message}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}